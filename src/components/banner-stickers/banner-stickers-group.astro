---
import { getImage } from "@astrojs/image";
import unicornSticker from "assets/unicorn_utterances_sticker_512.png";

const STICKER_SIZE = 144;
const STICKER_TRANSFORMS = [
	"translate(190, 51) scale(0.8)",
	"translate(298, 0) rotate(15)",
	"translate(80, 22) rotate(4) scale(1.2)",
	"translate(140, 127) rotate(5) scale(0.9)",
	"translate(70, 170) scale(0.8)",
	"translate(187, 194) rotate(8)",
	"translate(110, 230) rotate(-4) scale(0.9)",
	"translate(268, 229) rotate(6)",
	"translate(360, 210) scale(0.8)",
];

type StickerInfo = {
	src: string;
	name: string;
};

async function createSticker(
	name: string,
	width: number = STICKER_SIZE,
	height: number = STICKER_SIZE
): Promise<StickerInfo> {
	const image = await getImage({
		src: `/stickers/${name}.png`,
		width,
		height,
		alt: "",
		format: "png",
	});

	return {
		src: image.src,
		name,
	};
}

// we can't use JSX for these since Astro changes `<image>` tags into `<img>`, breaking the SVG
const stickers = [
	await createSticker("android"),
	await createSticker("angular"),
	await createSticker("html"),
	await createSticker("python"),
	await createSticker("react"),
	await createSticker("typescript"),
	await createSticker("vue"),
	await createSticker("ferris", STICKER_SIZE, STICKER_SIZE * (399 / 512)),
	await createSticker("git"),
].sort(() => 0.5 - Math.random());

const stickerHtml = STICKER_TRANSFORMS.map((transform) => ({
	...stickers.pop(),
	transform,
}))
	.map(
		(sticker) => `
	<image width="64" height="64" xlink:href="${sticker.src}" transform="${sticker.transform}"></image>
`
	)
	.join("");

const unicornImage = await getImage({
	src: unicornSticker,
	width: 512,
	height: 541,
	alt: "",
	format: "png",
});
---

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 418 300">
	<g set:html={stickerHtml} />

	<image
		width="128"
		height="135"
		xlink:href={unicornImage.src}
		transform="translate(250, 80)"
	/>
</svg>
