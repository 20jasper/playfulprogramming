---
import { Chip } from "../chip/chip";
import { translate } from "../../utils";
import style from "./search-section.module.scss";
import * as data from "../../utils/data";
import { SearchInput } from "../input/input";
import { IconOnlyButton } from "../button/button";
import { Icon } from "astro-icon";
import { SEARCH_QUERY_KEY, buildSearchQuery } from "../../utils/search";

const tagsToDisplay = Object.entries(data.tags)
	.sort(() => 0.5 - Math.random())
	.slice(0, 8);
---

<section class={style.container}>
	<h1 class={`text-style-headline-4 ${style.title}`}>
		{translate(Astro, "title.looking_for_more")}
	</h1>
	<p class={`text-style-body-medium ${style.description}`}>
		{translate(Astro, "desc.looking_for_more")}
	</p>

	<form class={style.searchbarRow} method="get" action="/search">
		<SearchInput
			name={SEARCH_QUERY_KEY}
			class={style.searchbar}
			placeholder={translate(Astro, "action.search_for")}
		/>
		<IconOnlyButton
			tag="button"
			type="submit"
			class={style.searchButton}
			aria-label={translate(Astro, "title.search")}
		>
			<Icon width="100%" height="100%" name="arrow_right" />
		</IconOnlyButton>
	</form>

	<ul class="unlist-inline gap-2 text-center">
		{
			tagsToDisplay.map((tag) => (
				<li>
					<Chip href={`/search?${buildSearchQuery({ filterTags: [tag[0]] })}`}>
						{tag[1].displayName}
					</Chip>
				</li>
			))
		}
	</ul>
</section>
