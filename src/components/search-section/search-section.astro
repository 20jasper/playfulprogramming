---
import { Chip } from "../chip/chip";
import { translate } from "../../utils";
import style from "./search-section.module.scss";
import * as data from "../../utils/data";
import { SearchInput } from "../input/input";
import { IconOnlyButton } from "../button/button";
import { Icon } from "astro-icon";
import { buildSearchQuery } from "../../utils/search";

const tagsToDisplay = [...data.tags]
	.sort(() => 0.5 - Math.random())
	.slice(0, 8);
---

<section class={style.container}>
	<h1 class={`text-style-headline-4 ${style.title}`}>
		{translate(Astro, "title.looking_for_more")}
	</h1>
	<p class={`text-style-body-medium ${style.description}`}>
		{translate(Astro, "desc.looking_for_more")}
	</p>

	<form id="searchForm" class={style.searchbarRow}>
		<SearchInput name="searchVal" type="text" class={style.searchbar} />
		<IconOnlyButton tag="button" type="submit" class={style.searchButton}>
			<Icon width="100%" height="100%" name="arrow_right" />
		</IconOnlyButton>
	</form>

	<ul class="unlist-inline gap-2 text-center">
		{
			tagsToDisplay.map((tag) => (
				<li>
					<Chip href={`/search?${buildSearchQuery({ filterTags: [tag] })}`}>
						{tag}
					</Chip>
				</li>
			))
		}
	</ul>
</section>

<script>
	import { buildSearchQuery } from "../../utils/search";

	const searchForm = document.getElementById("searchForm") as HTMLFormElement;
	searchForm.addEventListener("submit", (e) => {
		e.preventDefault();
		const searchVal = (searchForm.searchVal as HTMLInputElement)
			.value as string;
		if (!searchVal) return;
		window.location.href = `/search?${buildSearchQuery({
			searchQuery: searchVal,
		})}`;
	});
</script>
