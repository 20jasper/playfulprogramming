---
import { Languages } from "types/index";
import { removePrefixLanguageFromPath } from "utils/translations";

type Props = {
	lang: string;
	providedLangs?: Languages[];
	pathName: string;
	siteMetadata: { siteUrl: string };
};

const { lang, providedLangs, siteMetadata, pathName } = Astro.props as Props;
---

<>
	{
		lang !== "en" && (
			<link
				rel="alternate"
				href={
					siteMetadata.siteUrl + removePrefixLanguageFromPath(pathName || "")
				}
				href-lang="x-default"
			/>
		)
	}
</>
<>
	{
		providedLangs?.length
			? providedLangs.map((lang) => (
					<link
						rel="alternate"
						href={
							siteMetadata.siteUrl +
							`${lang === "en" ? "" : "/"}${lang === "en" ? "" : lang}` +
							removePrefixLanguageFromPath(pathName || "")
						}
						href-lang={lang}
					/>
			  ))
			: null
	}
</>
