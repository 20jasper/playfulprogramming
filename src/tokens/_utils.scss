@import "./colors";

@function pxToRem($pxNum) {
	@return #{calc($pxNum / 16)}rem;
}

@mixin until($breakpoint) {
	@media screen and (max-width: $breakpoint) {
		@content;
	}
}

@mixin from($breakpoint) {
	@media screen and (min-width: $breakpoint) {
		@content;
	}
}

@mixin transition($properties) {
	$transitions: ();
	@each $prop in $properties {
		$transitions: append($transitions, $prop $animStyle $animSpeed, comma);
	}
	transition: $transitions;
}

@mixin darkTheme() {
	:global(html.dark) &, :global(body.dark) &, :global(.darkTheme) & {
		@content;
	}
}

// Mixin for all of the CSS variables used to reference the theme values
@mixin theme-vars($t) {
	@each $key, $value in map-get($themes, $t) {
		#{$key}: #{$value};
	}
}

// Reference a specific themed variable (and check to ensure it exists)
@function theme-var($key) {
	// ensure that the variable is defined in all themes
	@each $theme, $map in $themes {
		@if not map-has-key($map, $key) {
			@error "Theme variable #{$key} is not defined in $themes.#{$theme}.";
		}
	}

	@return var($key);
}
