---
import { getFullRelativePath } from "utils/url-paths";
import SEO from "src/components/seo/seo.astro";
import "../../page-components/collections/collections.scss";
import "../../styles/post-body.scss";
import "../../styles/tabs.scss";
import "../../styles/shiki.scss";
import "../../styles/convertkit.scss";
import Document from "src/layouts/document.astro";
import { getImageSize } from "../../utils/get-image-size";
import CollectionHeaderDefault from "src/page-components/collections/collection-header-default.astro";
import CollectionTableOfContents from "src/page-components/collections/collection-table-of-contents.astro";

export async function getStaticPaths() {
	const collections = await Astro.glob(
		"../../../content/collections/**/index.md"
	);

	return collections.map((collection) => {
		return {
			params: {
				slug: collection.frontmatter.slug,
			},
			props: {
				Content: collection.Content,
				collection: collection.frontmatter,
			},
		};
	});
}

interface CollectionProps {
	collection: any;
	Content: any;
}

const { Content, collection } = Astro.props as CollectionProps;

const { slug } = collection;

// let aboveMarkdownHTML = "";
// if (collection.aboveFoldMarkdown) {
//     const { html } = await markdownToHtml(
//         collection.aboveFoldMarkdown,
//         path.resolve(collectionsDirectory, collection.slug)
//     );
//     aboveMarkdownHTML = html;
// }

// const aboveResult = useMarkdownRenderer({
// 	markdownHTML: aboveMarkdownHTML || "",
// 	serverPath: ["/collections", slug],
// });

const coverImgPath = getFullRelativePath(
	"/content/collections",
	slug,
	collection.coverImg
);

const coverImgSize = getImageSize("." + coverImgPath, process.cwd());

const coverImgAspectRatio = coverImgSize.width / coverImgSize.height;
---

<Document>
	<SEO
		title={collection.title}
		description={collection.description}
		unicornsData={collection.authors}
		publishedTime={collection.published}
		type={collection.type}
		shareImage={collection.socialImg || coverImgPath}
	/>
	<div class="collectionsContainer">
		<CollectionHeaderDefault
			coverImgPath={coverImgPath}
			coverImgAspectRatio={coverImgAspectRatio}
			collection={collection}
		/>
		<CollectionTableOfContents collection={collection} />
		<div class="post-body markdownContainer">
			<Content />
		</div>
	</div>
</Document>
