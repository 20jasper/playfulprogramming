---
import Document from "src/layouts/document.astro";

import SEO from "components/seo/seo.astro";

import type { MarkdownInstance } from "astro";
import { ExtendedPostInfo } from "types/index";
import BlogPost from "src/views/blog-post/blog-post.astro";
import { Languages } from "types/index";

export async function getStaticPaths() {
	const posts = await Astro.glob<ExtendedPostInfo>(
		"../../../../content/blog/**/*.md"
	);

	return posts.map((post) => {
		return {
			params: {
				locale:
					post.frontmatter.locale !== "en"
						? post.frontmatter.locale
						: undefined,
				postid: post.frontmatter.slug,
			},
			props: {
				locale: post.frontmatter.locale,
				Content: post.Content,
				post: post.frontmatter,
				posts,
			},
		};
	});
}

const { Content, post, posts, locale } = Astro.props as {
	post: ExtendedPostInfo;
	locale: Languages;
	posts: MarkdownInstance<ExtendedPostInfo>[];
	Content: MarkdownInstance<any>["Content"];
};

const locales = post?.locales || [];

const otherLangs = locales ? locales.filter((t) => t !== post.locale) : [];
---

<Document size="xl">
	<SEO
		slot="head"
		title={post.title}
		description={post.description || post.excerpt}
		unicornsData={post.authorsMeta}
		publishedTime={post.published}
		editedTime={post.edited}
		keywords={post.tags}
		type="article"
		canonical={post.originalLink}
		langData={{
			otherLangs,
			currentLang: post.locale,
		}}
		shareImage={post.socialImg}
	/>
	<BlogPost Content={Content} post={post} posts={posts} />
</Document>
