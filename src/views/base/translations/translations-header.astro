---
import { Languages } from "types/index";
import { languages } from "constants/index";
import {
	getPrefixLanguageFromPath,
	removePrefixLanguageFromPath,
} from "utils/translations";
import style from "./translations-header.module.scss";
import { Icon } from "astro-icon";

interface TranslationsHeaderProps {
	locales: Languages[];
}

const props = Astro.props as TranslationsHeaderProps;
const path = removePrefixLanguageFromPath(Astro.url.pathname);
const currentLocale = getPrefixLanguageFromPath(Astro.url.pathname);

// exclude the current locale from displayed options
const locales = props.locales.filter((locale) => locale !== currentLocale);
---

<div class={style.card}>
	<Icon width="24" height="24" name="mdi:translate" />
	<p class={style.text}>
		Translated by our community into:{" "}
		{
			locales.flatMap((locale, i, arr) => {
				const href = locale === "en" ? path : `/${locale}${path}`;
				return [
					<a href={href}>{languages[locale]}</a>,
					i !== arr.length - 1 ? ", " : null,
				];
			})
		}
	</p>
</div>
