---
import PostTitleHeader from "./post-title-header/post-title-header.astro";
import TableOfContents from "./table-of-contents/table-of-contents.astro";
import MailingListFull from "components/mailing-list/mailing-list-full.astro";
import Disqus from "components/disqus/disqus.astro";
import TranslationsHeader from "../base/translations/translations-header.astro";
import BlogPostLayout from "./blog-post-layout/blog-post-layout.astro";
import { Icon } from "astro-icon";

import type { MarkdownInstance } from "astro";
import { ExtendedPostInfo } from "types/index";

import { siteMetadata } from "constants/site-config";
import "../../styles/shiki.scss";
import "../../styles/markdown/tabs.scss";
import "../../styles/convertkit.scss";
import SeriesToC from "./series/series-toc.astro";
import SeriesNav from "./series/series-nav.astro";
import { getPrefixLanguageFromPath } from "utils/translations";
import RelatedPosts from "components/related-posts/related-posts.astro";

const { Content, post, posts } = Astro.props as {
	post: ExtendedPostInfo;
	Content: MarkdownInstance<any>["Content"];
	posts: MarkdownInstance<ExtendedPostInfo>[];
};

const locale = getPrefixLanguageFromPath(Astro.url.pathname);

const GHLink = `https://github.com/${siteMetadata.repoPath}/tree/master${siteMetadata.relativeToPosts}/${post.slug}/index.md`;

let seriesPosts: ExtendedPostInfo[] = [];
if (post.collection && post.order) {
	seriesPosts = posts
		.filter(
			(filterPost) =>
				filterPost.frontmatter.locale === locale &&
				filterPost.frontmatter.collection === post.collection
		)
		.sort(
			(postA, postB) =>
				Number(postA.frontmatter.order) - Number(postB.frontmatter.order)
		)
		.map((post) => post.frontmatter);
}
---

<script>
	import mediumZoom from "medium-zoom";

	mediumZoom(".post-body img:not([data-nozoom])");
</script>
<script>
	import { enableTabs } from "../../utils/markdown/tabs/tabs-script";
	enableTabs();
</script>
<script>
	import { enableTables } from "../../utils/markdown/tables/tables-script";
	enableTables();
</script>
<script>
	import { iFrameClickToRun } from "../../utils/markdown/iframes/iframe-script";
	iFrameClickToRun();
</script>
<BlogPostLayout>
	<TableOfContents slot="left" headingsWithId={post.headingsWithId} />
	<div slot="right">
		<RelatedPosts post={post} />
	</div>
	<header role="banner" class="marginZeroAutoChild">
		<PostTitleHeader post={post} />
	</header>
	<main class="post-body" data-testid={"post-body-div"}>
		{
			post.collection ? (
				<SeriesToC
					post={post}
					postSeries={seriesPosts}
					collection={post.collectionMeta}
				/>
			) : null
		}
		{
			post.locales && post.locales.length > 1 ? (
				<TranslationsHeader locales={post.locales} />
			) : null
		}
		<Content />
		{
			post.collection ? (
				<SeriesNav post={post} postSeries={seriesPosts} />
			) : null
		}
	</main>
	<footer role="contentinfo" class="post-lower-area">
		{
			post.licenseMeta ? (
				<div>
					<a
						aria-label={`Post licensed with ${post.licenseMeta.displayName}`}
						href={post.licenseMeta.explainLink}
						style={{ display: "table", margin: "0 auto" }}
					>
						<img
							src={post.licenseMeta.footerImg}
							alt={post.licenseMeta.licenceType}
						/>
					</a>
				</div>
			) : null
		}
		<MailingListFull />
		<div class="postBottom">
			<div class="btnLike prependIcon">
				<Icon height="36" width="36" name="message" />
				<p>Comments</p>
			</div>
			<a
				class="baseBtn prependIcon"
				href={GHLink}
				target="_blank"
				rel="nofollow noopener noreferrer"
			>
				<Icon height="36" width="36" name="github" class="strokeicon" />
				View this Post on GitHub
			</a>
		</div>
		<Disqus slug={post.slug} title={post.title} />
	</footer>
</BlogPostLayout>
