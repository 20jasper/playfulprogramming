---
import style from "./contributor-card.module.scss";
import { UnicornInfo } from "uu-types";
import { Picture } from "@astrojs/image/components";
import { Button } from "components/index";
import { translate } from "src/utils/translations";
import { getHrefContainerProps } from "utils/href-container-script";
import allRoles from "../../../content/data/roles.json";

interface CardProps {
	unicorn: UnicornInfo;
}

const { unicorn } = Astro.props as CardProps;
const unicornHref = `/unicorns/${unicorn.id}`;

const roles = unicorn.roles.map(
	(role) => allRoles.find((r) => r.id === role)!.prettyname,
);

if (unicorn.achievements.includes("partner")) {
	roles.unshift("Partner");
}
---

<li class={style.card} {...getHrefContainerProps(unicornHref)}>
	<Picture
		alt=""
		class={style.avatar}
		sizes="96px"
		widths={[96]}
		aspectRatio={1}
		data-dont-round="true"
		formats={["avif", "webp", "png"]}
		src={unicorn.profileImgMeta.relativeServerPath}
		loading="lazy"
	/>

	<div class={style.info}>
		<span class={`${style.name} text-style-body-large-bold`}>
			{unicorn.name}
		</span>
		<ul
			class={`${style.roles} text-style-body-small`}
			aria-label={translate(Astro, "desc.unicorn_roles")}
			role="list"
		>
			{
				roles.map((role, i, arr) => (
					<li role="listitem">
						{[role, i < arr.length - 1 && <span aria-hidden="true">, </span>]}
					</li>
				))
			}
		</ul>
	</div>

	<Button
		class={style.button}
		href={unicornHref}
		aria-label={translate(Astro, "label.view_profile_for", unicorn.name)}
	>
		{translate(Astro, "action.view_profile")}
	</Button>
</li>
