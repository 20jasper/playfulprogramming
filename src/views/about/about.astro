---
import style from "./about.module.scss";
import "../../styles/shiki.scss";
import * as data from "src/utils/data";
import ContributorCard from "./contributor-card.astro";
import { getTranslatedPage, translate } from "src/utils/translations";
import TranslationsHeader from "src/views/base/translations/translations-header.astro";
import { License } from "./license";
import BannerSvg from "./banner-svg.astro";

const about = getTranslatedPage(
	Astro,
	await Astro.glob("../../../content/site/about-us*.mdx"),
);

const tags = [
	...[...data.tags.values()]
		.filter((tag) => !!tag.image && !!tag.explainerHtml)
		// prevent duplicates when images are used with multiple tags
		.reduce((map, entry) => {
			!map.has(entry.image) && map.set(entry.image, entry);
			return map;
		}, new Map())
		.values(),
];
---

<div class="container">
	<div class={style.banner}>
		<BannerSvg />
	</div>
	<main class={`${style.aboutBody} post-body`}>
		<TranslationsHeader locales={about.locales} />

		<about.page.Content />

		<hr />

		<h2 id="contributors">
			{translate(Astro, "title.contributors")}
		</h2>
		<ul class={style.unicorns} role="list" aria-labelledby="contributors">
			{
				data.unicorns.map((unicornInfo) => (
					<ContributorCard unicorn={unicornInfo} />
				))
			}
		</ul>

		<hr />

		<h2 id="licenses">{translate(Astro, "title.licenses")}</h2>

		<ul class={style.licenses} role="list" aria-labelledby="licenses">
			{
				tags.map((tag) => (
					<li>
						<License
							client:visible
							name={tag.displayName}
							explainerHtml={tag.explainerHtml}
							image={tag.image}
							action={
								tag.explainerType === "license"
									? translate(Astro, "action.view_license")
									: translate(Astro, "action.view_attribution")
							}
							actionLabel={
								tag.explainerType === "license"
									? translate(Astro, "label.view_license_for", tag.displayName)
									: translate(
											Astro,
											"label.view_attribution_for",
											tag.displayName,
									  )
							}
						/>
					</li>
				))
			}
		</ul>

		<p>
			{translate(Astro, "desc.licenses_request_removal")}
			<a id="email-licenses" href="#">
				<noscript>JavaScript required</noscript>
			</a>
			<script>
				{
					const a: HTMLAnchorElement =
						document.querySelector("#email-licenses");
					// This is base64 for UU's contact email, to prevent automated page crawlers from finding it
					a.href =
						"mailto:" +
						(a.innerText = atob(
							"bGljZW5zaW5nQHVuaWNvcm4tdXR0ZXJhbmNlcy5jb20=",
						));
				}
			</script>
		</p>

		<hr />
	</main>
</div>
