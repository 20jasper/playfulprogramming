@use "sass:math";
@import "./tokens/index";
@import "./styles/text-styles";
@import "./styles/container";
@import "./styles/grid";
@import "./styles/post-body";
@import "./styles/utilities";

html.dark,
body.dark,
.darkTheme {
	@include theme-vars(dark);
}

:root {
	font-size: $rootFontSize;
	scrollbar-color: theme-var(--focus-outline_primary) theme-var(--background_primary);
	transition: scrollbar-color $animStyle $animSpeed;

	@include theme-vars(light);

	box-sizing: border-box;
}

* {
	box-sizing: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	code[class*="language-"] {
		font-size: inherit;
	}
}

:focus {
	outline-color: theme-var(--focus-outline_primary);
}

//without this all <button>s have bad outline colors in firefox
:focus::-moz-focus-inner {
	padding: 0; //prevent weirdness just in case
	border-color: theme-var(--focus-outline_primary);
}

*::-webkit-scrollbar {
	width: 12px;
}

*::-webkit-scrollbar-track {
	background: theme-var(--background_primary);
	border-radius: 10px;
}

*::-webkit-scrollbar-thumb {
	border-radius: 10px;
	background: theme-var(--focus-outline_primary);
}

body {
	background-color: theme-var(--background_primary);
	margin: 0;
	padding: 0;
	color: theme-var(--foreground_emphasis-high);
	transition: color $animStyle $animSpeed,
		background-color $animStyle $animSpeed;
}

.medium-zoom-overlay {
	background: theme-var(--background_primary) !important;
}

/* https://snook.ca/archives/html_and_css/hiding-content-for-accessibility */
.visually-hidden {
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
	clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
	clip: rect(1px, 1px, 1px, 1px);
}

.visually-hidden a:focus,
.visually-hidden input:focus,
.visually-hidden button:focus {
	position: static;
	width: auto;
	height: auto;
}

img.circleImg, .circleImg img {
	flex-shrink: 0;
	flex-grow: 0;
	border-radius: 50%;
}

.dark .hide-on-dark {
	display: none;
}

.light .show-on-dark {
	display: none;
}

// use currentColor for fill on astro-icon svgs
svg[astro-icon]:not(.strokeicon):not(.nofill) {
	@include transition(fill);
	fill: currentColor;

	* {
		fill: inherit;
	}
}
