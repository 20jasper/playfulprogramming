---
import PostList from "components/post-card-list/post-card-list.astro";
import { Pagination } from "components/pagination/pagination";
import { Page } from "astro";
import { PostInfo } from "types/PostInfo";
import ProfileHeader from "./profile-header/profile-header.astro";
import { getUnicornProfilePicMap } from "utils/get-unicorn-profile-pic-map";
import FilterSearchBar from "components/filter-search-bar/filter-search-bar.astro";
import WordCount from "./word-count/word-count.astro";
import { UnicornInfo } from "types/UnicornInfo";

export interface UnicornTemplateProps {
	unicorn: UnicornInfo;
	posts: PostInfo[];
	allPosts: PostInfo[];
	rootURL: string;
	page: Pick<
		Page<PostInfo>,
		"total" | "currentPage" | "size" | "lastPage" | "url"
	>;
}

const { unicorn, page, rootURL, posts, allPosts } =
	Astro.props as UnicornTemplateProps;
const unicornProfilePicMap = await getUnicornProfilePicMap();

const wordCount = allPosts.reduce((prev, post) => {
	return prev + post.wordCount;
}, 0);

const authorId = unicorn.id;
---

<script define:vars={{ authorId }}>
	window.authorId = authorId;
</script>
<ProfileHeader unicornData={unicorn} />
<main>
	<FilterSearchBar>
		<WordCount wordCount={wordCount} numberOfArticles={allPosts.length} />
	</FilterSearchBar>
	<PostList
		listAriaLabel={`List of posts written by ${unicorn.name}`}
		postsToDisplay={posts}
		unicornProfilePicMap={unicornProfilePicMap}
	/>
</main>
<Pagination page={page} rootURL={rootURL} />
