---
const { class: className, ...props } =
	Astro.props as astroHTML.JSX.ButtonHTMLAttributes;
---

<style>
	.big-filled-button {
		padding: var(--btn-ver-padding_large) var(--btn-hor-padding_large);
		background: var(--btn-background_filled);
		color: var(--btn-foreground_filled);
		border-radius: var(--btn-corner-radius);
		border-width: var(--btn-border-width_large);
		border-color: var(--btn-background_filled);
		border-style: solid;
		position: relative;
		outline: none;
	}

	.big-filled-button:hover::after {
		content: " ";
		position: absolute;
		top: calc(0px - var(--btn-border-width_large));
		left: calc(0px - var(--btn-border-width_large));
		right: calc(0px - var(--btn-border-width_large));
		bottom: calc(0px - var(--btn-border-width_large));
		border-radius: var(--btn-corner-radius);
		background: var(--btn-state-hovered_filled);
	}

	.big-filled-button:active::after {
		content: " ";
		position: absolute;
		top: calc(0px - var(--btn-border-width_large));
		left: calc(0px - var(--btn-border-width_large));
		right: calc(0px - var(--btn-border-width_large));
		bottom: calc(0px - var(--btn-border-width_large));
		border-radius: var(--btn-corner-radius);
		border-width: var(--btn-border-width_large);
		background: var(--btn-state-pressed_filled);
	}
</style>
<button
	{...props}
	class={`text-style-button big-filled-button ${className ? className : ""}`}
>
	<slot />
</button>
