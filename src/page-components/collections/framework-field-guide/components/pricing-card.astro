---
import SmallOutlinedButton from "./small-outlined-button.astro";
import SmallFilledButton from "./small-filled-button.astro";
import ffgArrow from "../icons/ffg-arrow.svg";
import ffgStar from "../icons/ffg-star.svg";

interface PricingCardProps {
	class: string;
	isSale: boolean;
	isHighlighted: boolean;
	title: string;
	description: string;
	price: string;
	enterpriseToggle: boolean;
	enterpriseExplainer: string;
	ctaButtonType: "outlined" | "filled";
	ctaButtonText: string;
	ctaLink: string;
	bulletPoints: string[];
	starPoints: string[];
}

const {
	class: className,
	isSale,
	isHighlighted,
	title,
	description,
	price,
	enterpriseToggle,
	enterpriseExplainer,
	ctaButtonText,
	ctaLink,
	ctaButtonType,
	bulletPoints,
	starPoints,
} = Astro.props as PricingCardProps;

const CTAButton =
	ctaButtonType === "outlined" ? SmallOutlinedButton : SmallFilledButton;
---

<div
	class={`pricing-card-container ${
		isHighlighted ? "highlighted" : ""
	} ${className}`}
>
	<div>
		<p class="text-style-headline-4 pricing-title">{title}</p>
		<p class="text-style-body-medium pricing-description">{description}</p>
		<p class="text-style-headline-1 pricing-price">{price}</p>
		<p class="text-style-body-small-bold pricing-enterpriseExplainer">
			{enterpriseExplainer}
		</p>
	</div>
	{
		enterpriseToggle && (
			<div>
				<p>
					https://stackblitz.com/edit/vanilla-css-toggle-btn-i4fcnv?file=index.html
				</p>
			</div>
		)
	}
	<div>
		<!-- TODO: Make it an `a` tag -->
		<CTAButton>{ctaButtonText}</CTAButton>
	</div>
	<div>
		<hr class="divider" />
	</div>
	<div class="list-items">
		<ul class="bulletPoints">
			{
				bulletPoints.map((bulletPoint) => (
					<li class="text-style-body-small-bold">
						<img alt="" src={ffgArrow} class="list-item-bullet" />
						{bulletPoint}
					</li>
				))
			}
		</ul>
		<ul class="starPoints">
			{
				starPoints.map((starPoint) => (
					<li class="text-style-body-small-bold">
						<img alt="" src={ffgStar} class="list-item-bullet" />
						{starPoint}
					</li>
				))
			}
		</ul>
	</div>
</div>

<style>
	.pricing-card-container {
		padding: var(--section-ver-padding) var(--section-hor-padding);
		display: flex;
		flex-direction: column;
		gap: var(--section-gap);
		border-radius: var(--pricing-container-radius);
		background: var(--pricing-container_default);
		width: calc(100% / 3 - var(--pricing-container-radius));
		text-align: center;
	}

	.pricing-card-container.highlighted {
		background: var(--pricing-container_highlighted);
		width: calc(100% / 3);
	}

	.pricing-title {
		color: var(--on-dark-emphasis-high);
		margin: 0;
		margin-bottom: var(--spc-1x);
	}

	.pricing-description {
		color: var(--on-dark-emphasis-medium);
		margin: 0;
		margin-bottom: var(--section-gap);
	}

	.pricing-price {
		color: var(--on-dark-emphasis-high);
		margin: 0;
		margin-bottom: var(--spc-1x);
	}

	.pricing-enterpriseExplainer {
		color: var(--on-dark-emphasis-medium);
		margin: 0;
	}

	.divider {
		border: none;
		border-top: 2px dotted #607090;
	}

	.list-items {
		text-align: start;
	}

	.list-item-bullet {
		height: var(--bullet-list-item-icon-size);
		width: var(--bullet-list-item-icon-size);
		margin-right: var(--spc-1x);
	}

	.starPoints,
	.bulletPoints {
		list-style: none;
		margin: 0;
		padding: 0;
		display: flex;
		flex-direction: column;
		flex-wrap: nowrap;
		gap: var(--bullet-list-item-gap);
	}

	.bulletPoints {
		margin-bottom: var(--section-gap);
	}
</style>
